// source: settings.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.schema.GetSettingsRequest', null, global);
goog.exportSymbol('proto.schema.GetSettingsResponse', null, global);
goog.exportSymbol('proto.schema.SettingsModel', null, global);
goog.exportSymbol('proto.schema.UpdateSettingsRequest', null, global);
goog.exportSymbol('proto.schema.UpdateSettingsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.SettingsModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.SettingsModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.SettingsModel.displayName = 'proto.schema.SettingsModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.GetSettingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.GetSettingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.GetSettingsRequest.displayName = 'proto.schema.GetSettingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.GetSettingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.GetSettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.GetSettingsResponse.displayName = 'proto.schema.GetSettingsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.UpdateSettingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.UpdateSettingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.UpdateSettingsRequest.displayName = 'proto.schema.UpdateSettingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.schema.UpdateSettingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.schema.UpdateSettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.schema.UpdateSettingsResponse.displayName = 'proto.schema.UpdateSettingsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.SettingsModel.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.SettingsModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.SettingsModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SettingsModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    usdtogoldcoins: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    usdtosweepcoins: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    dailyrewardexpiredays: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dailyrewardvalueinusd: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    signuprewardvalueinusd: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    goldcoinholdrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    sweepcoinholdrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    goldcoinjackpotcontribution: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    sweepcoinjackpotcontribution: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    goldcoinminimumjackpot: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    sweepcoinminimumjackpot: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.SettingsModel}
 */
proto.schema.SettingsModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.SettingsModel;
  return proto.schema.SettingsModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.SettingsModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.SettingsModel}
 */
proto.schema.SettingsModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUsdtogoldcoins(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUsdtosweepcoins(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDailyrewardexpiredays(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDailyrewardvalueinusd(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSignuprewardvalueinusd(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGoldcoinholdrate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSweepcoinholdrate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGoldcoinjackpotcontribution(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSweepcoinjackpotcontribution(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGoldcoinminimumjackpot(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSweepcoinminimumjackpot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.SettingsModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.SettingsModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.SettingsModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.SettingsModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsdtogoldcoins();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getUsdtosweepcoins();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getDailyrewardexpiredays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDailyrewardvalueinusd();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getSignuprewardvalueinusd();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getGoldcoinholdrate();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getSweepcoinholdrate();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getGoldcoinjackpotcontribution();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getSweepcoinjackpotcontribution();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getGoldcoinminimumjackpot();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getSweepcoinminimumjackpot();
  if (f !== 0.0) {
    writer.writeFloat(
      11,
      f
    );
  }
};


/**
 * optional float usdToGoldCoins = 1;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getUsdtogoldcoins = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setUsdtogoldcoins = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float usdToSweepCoins = 2;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getUsdtosweepcoins = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setUsdtosweepcoins = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 dailyRewardExpireDays = 3;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getDailyrewardexpiredays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setDailyrewardexpiredays = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional float dailyRewardValueInUsd = 4;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getDailyrewardvalueinusd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setDailyrewardvalueinusd = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float signUpRewardValueInUsd = 5;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getSignuprewardvalueinusd = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setSignuprewardvalueinusd = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float goldCoinHoldRate = 6;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getGoldcoinholdrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setGoldcoinholdrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float sweepCoinHoldRate = 7;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getSweepcoinholdrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setSweepcoinholdrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float goldCoinJackpotContribution = 8;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getGoldcoinjackpotcontribution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setGoldcoinjackpotcontribution = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float sweepCoinJackpotContribution = 9;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getSweepcoinjackpotcontribution = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setSweepcoinjackpotcontribution = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float goldCoinMinimumJackpot = 10;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getGoldcoinminimumjackpot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setGoldcoinminimumjackpot = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional float sweepCoinMinimumJackpot = 11;
 * @return {number}
 */
proto.schema.SettingsModel.prototype.getSweepcoinminimumjackpot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.schema.SettingsModel} returns this
 */
proto.schema.SettingsModel.prototype.setSweepcoinminimumjackpot = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.GetSettingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.GetSettingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.GetSettingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.GetSettingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.GetSettingsRequest}
 */
proto.schema.GetSettingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.GetSettingsRequest;
  return proto.schema.GetSettingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.GetSettingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.GetSettingsRequest}
 */
proto.schema.GetSettingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.GetSettingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.GetSettingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.GetSettingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.GetSettingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.GetSettingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.GetSettingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.GetSettingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.GetSettingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && proto.schema.SettingsModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.GetSettingsResponse}
 */
proto.schema.GetSettingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.GetSettingsResponse;
  return proto.schema.GetSettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.GetSettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.GetSettingsResponse}
 */
proto.schema.GetSettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.schema.SettingsModel;
      reader.readMessage(value,proto.schema.SettingsModel.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.GetSettingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.GetSettingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.GetSettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.GetSettingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.schema.SettingsModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional SettingsModel settings = 1;
 * @return {?proto.schema.SettingsModel}
 */
proto.schema.GetSettingsResponse.prototype.getSettings = function() {
  return /** @type{?proto.schema.SettingsModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.SettingsModel, 1));
};


/**
 * @param {?proto.schema.SettingsModel|undefined} value
 * @return {!proto.schema.GetSettingsResponse} returns this
*/
proto.schema.GetSettingsResponse.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.GetSettingsResponse} returns this
 */
proto.schema.GetSettingsResponse.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.GetSettingsResponse.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.UpdateSettingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.UpdateSettingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.UpdateSettingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateSettingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && proto.schema.SettingsModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.UpdateSettingsRequest}
 */
proto.schema.UpdateSettingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.UpdateSettingsRequest;
  return proto.schema.UpdateSettingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.UpdateSettingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.UpdateSettingsRequest}
 */
proto.schema.UpdateSettingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.schema.SettingsModel;
      reader.readMessage(value,proto.schema.SettingsModel.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.UpdateSettingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.UpdateSettingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.UpdateSettingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateSettingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.schema.SettingsModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional SettingsModel settings = 1;
 * @return {?proto.schema.SettingsModel}
 */
proto.schema.UpdateSettingsRequest.prototype.getSettings = function() {
  return /** @type{?proto.schema.SettingsModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.SettingsModel, 1));
};


/**
 * @param {?proto.schema.SettingsModel|undefined} value
 * @return {!proto.schema.UpdateSettingsRequest} returns this
*/
proto.schema.UpdateSettingsRequest.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.UpdateSettingsRequest} returns this
 */
proto.schema.UpdateSettingsRequest.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.UpdateSettingsRequest.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.schema.UpdateSettingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.schema.UpdateSettingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.schema.UpdateSettingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateSettingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && proto.schema.SettingsModel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.schema.UpdateSettingsResponse}
 */
proto.schema.UpdateSettingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.schema.UpdateSettingsResponse;
  return proto.schema.UpdateSettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.schema.UpdateSettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.schema.UpdateSettingsResponse}
 */
proto.schema.UpdateSettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.schema.SettingsModel;
      reader.readMessage(value,proto.schema.SettingsModel.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.schema.UpdateSettingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.schema.UpdateSettingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.schema.UpdateSettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.schema.UpdateSettingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.schema.SettingsModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional SettingsModel settings = 1;
 * @return {?proto.schema.SettingsModel}
 */
proto.schema.UpdateSettingsResponse.prototype.getSettings = function() {
  return /** @type{?proto.schema.SettingsModel} */ (
    jspb.Message.getWrapperField(this, proto.schema.SettingsModel, 1));
};


/**
 * @param {?proto.schema.SettingsModel|undefined} value
 * @return {!proto.schema.UpdateSettingsResponse} returns this
*/
proto.schema.UpdateSettingsResponse.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.schema.UpdateSettingsResponse} returns this
 */
proto.schema.UpdateSettingsResponse.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.schema.UpdateSettingsResponse.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.schema);
